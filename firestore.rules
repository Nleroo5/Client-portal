rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'admin@driveleadmedia.com';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Clients collection - Admin only write, no public read
    match /clients/{clientId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Sales Reps collection - Public can read active reps (for login dropdown), Admin can manage
    match /salesReps/{repId} {
      // Allow anyone to read active sales reps (needed for login dropdown)
      // Only name, email, and active status exposed - passwords are in Firebase Auth, not here
      allow read: if resource.data.active == true || isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    // Deals collection - Admin can do anything, reps can only read/write their own deals
    match /deals/{dealId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() ||
        (isAuthenticated() && resource.data.assignedTo == request.auth.uid);
    }

    // Scorecard collection - Reps can read/write their own, admin can read all
    match /scorecard/{scorecardId} {
      allow read: if isAdmin() ||
        (isAuthenticated() && resource.data.repId == request.auth.uid);
      allow write: if isAuthenticated() && request.resource.data.repId == request.auth.uid;
    }

    // Tasks collection - Reps can read/write their own, admin can read all
    match /tasks/{taskId} {
      allow read: if isAdmin() ||
        (isAuthenticated() && resource.data.assignedTo == request.auth.uid);
      allow write: if isAuthenticated() && request.resource.data.assignedTo == request.auth.uid;
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
