rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null &&
             get(/databases/$(database)/documents/salesReps/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is a sales rep
    function isRep() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/salesReps/$(request.auth.uid));
    }

    // Helper function to check if rep owns the resource
    function isRepOwner(repId) {
      return request.auth != null && request.auth.uid == repId;
    }

    // Client Portals - Admin only can write, clients can read with valid clientId
    match /clients/{clientId} {
      allow read: if request.auth != null ||
                     (request.query.clientId != null && request.query.clientId == clientId);
      allow write: if isAdmin();
    }

    // Sales Reps - Allow unauthenticated users to list active reps (for login dropdown)
    // Authenticated reps can read their own data, admins can write and delete
    match /salesReps/{repId} {
      // Allow anyone to read basic info of active reps (for login page dropdown)
      allow read: if resource.data.active == true || isRep();
      allow write, delete: if isAdmin();
    }

    // Deals - Reps can read their own, update limited stages. Admins can do everything.
    match /deals/{dealId} {
      // Admins can do everything (put this first for priority)
      allow read, write, delete: if isAdmin();

      // Reps can read deals assigned to them
      allow read: if isRep() &&
                     resource.data.assignedTo == request.auth.uid;

      // Reps can create deals
      allow create: if isRep() &&
                       request.resource.data.assignedTo == request.auth.uid &&
                       request.resource.data.stage in ['qualified', 'cold-outreach', 'follow-up', 'discovery-scheduled'];

      // Reps can only update deals assigned to them and only to allowed stages
      allow update: if isRep() &&
                       resource.data.assignedTo == request.auth.uid &&
                       (
                         // Can only change stage to allowed stages or mark as lost
                         !request.resource.data.diff(resource.data).affectedKeys().hasAny(['stage']) ||
                         request.resource.data.stage in ['qualified', 'cold-outreach', 'follow-up', 'discovery-scheduled', 'closed-lost']
                       );
    }

    // Scorecard - Admins can write, reps can read all scorecards (for leaderboard)
    match /scorecard/{scorecardId} {
      // Reps can read all scorecards to view leaderboard
      allow read: if isRep();

      // Only admins can write scorecard data
      allow write: if isAdmin();
    }

    // Targets - Admins only (deprecated, but keeping for backwards compatibility)
    match /targets/{targetId} {
      allow read: if isRep();
      allow write: if isAdmin();
    }

    // Deal audit trail
    match /dealAudit/{auditId} {
      allow read: if isRep() || isAdmin();
      allow write: if isRep() || isAdmin();
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
